import matplotlib.pyplot as plt
import networkx as nx

def create_graph(number_of_nodes:list[int], edges: list[(int,int,int)]):
    graph = nx.DiGraph( directed = True)
    graph.add_nodes_from(number_of_nodes)
    for item in edges:
        graph.add_edge(item[0],item[1],weight = item[2])
    pos = nx.circular_layout(graph)
    options = {
        'node_color': 'blue',
        'node_size': 1350,
        'width': 1,
        'arrowstyle': '-|>',
        'arrowsize': 18,
        'edge_color': 'black',
    }
    nx.draw(graph,pos,with_labels=True,font_weight = 'bold',**options)
    nx.draw_networkx_edge_labels(
        graph,
        pos,
        edge_labels = {(item[0],item[1]):item[2] for item in edges },
        font_color='black'
    )
    shortest_way = nx.shortest_path(graph,1,10,weight='weight')

    prew = 0
    list2 = []
    for i in range(1, len(shortest_way)):
        list2.append((shortest_way[prew], shortest_way[i]))
        prew = i

    nx.draw_networkx_edges(graph,pos,list2,edge_color='red',arrowsize=18,arrowstyle='-|>',arrows=True)
    print("Оптимальный путь - " + str(nx.shortest_path(graph,1,10,weight='weight')) + " - "+ str(nx.shortest_path_length(graph,1,10,weight='weight')))
    plt.show()


def main():
    create_graph([i for i in range(1,10)],[(1, 2, 3), (1, 3 ,4), (1, 4, 2), (2, 6, 3), (3, 6, 6), (4, 6, 2), (4,5, 5), (5,7,6),(5,9,12),(6,5,1),(6,7,8),(6,8,7),(7,10,4),(8,10,3),(9,8,6),(9,10,11)])

if __name__ == '__main__':
    main()
